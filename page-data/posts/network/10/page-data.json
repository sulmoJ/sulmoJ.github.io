{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/network/10","result":{"data":{"markdownRemark":{"id":"737ca0a6-810f-51a2-b065-aedfff98d8e0","html":"<h3 id=\"stateful-service\" style=\"position:relative;\"><a href=\"#stateful-service\" aria-label=\"stateful service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stateful service</h3>\n<ul>\n<li>‘상태’를 포함한 Client와의 세션 정보를 server에 저장</li>\n<li>연결 유지로 인해 다른 유저들의 행동,변화를 바로바로 동기화 가능</li>\n<li>대표적인 Stateful 구조를 따르는 프로토콜로 TCP의 3-way handshaking이 있다.</li>\n<li>빠른 처리 속도로 실시간 온라인 게임이 가능</li>\n</ul>\n<h3 id=\"stateless-service\" style=\"position:relative;\"><a href=\"#stateless-service\" aria-label=\"stateless service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stateless service</h3>\n<ul>\n<li>서버의 오류가 발생 하여도 일부 유저,일부 기능에만 문제가 생김</li>\n<li>모든 데이터는 DB 기준으로 처리 하기 때문에 서버 다운의 롤백이 없음</li>\n<li>\n<p>웹서버의 분산 처리가 용이함.</p>\n<ul>\n<li>세션과 같은경우 접속한 서버에서 상태를 보관하고 연결됨으로 성능을 위한 스케일 아웃과 같이 여러대의 물리적인 서버를 이용시 로드밸런싱이 잘 안되는 등 문제가 생길 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"그래서\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C\" aria-label=\"그래서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서</h3>\n<p>우리가 공부하는 웹개발에서 가장 많이 사용하는</p>\n<ul>\n<li>HTTP는 Statelss한 성격을 가진 ‘프로토콜’</li>\n<li>REST는 Stateless한 성격을 가진 ‘설계 구조’</li>\n</ul>\n<p>를 stateless와 함께 생각 해보자</p>","fields":{"slug":"/posts/network/10","tagSlugs":["/tag/network/"]},"frontmatter":{"date":"2021-10-13T00:00:00","description":"무지성 작성글입니다. 없어져야 하는글이고 곧 삭제될 예정입니다.","tags":["network"],"title":"Stateful vs. Stateless 서비스","socialImage":{"publicURL":"/static/624cc4a835e68430a8beec01cef8ac6c/photo.jpg"}}}},"pageContext":{"slug":"/posts/network/10"}},"staticQueryHashes":["251939775","401334301","825871152"]}