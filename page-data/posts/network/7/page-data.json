{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/network/7","result":{"data":{"markdownRemark":{"id":"2bc2de56-6d88-5154-a7b8-f596f8790cf9","html":"<br>\n<h3 id=\"dns-round-robin-방식\" style=\"position:relative;\"><a href=\"#dns-round-robin-%EB%B0%A9%EC%8B%9D\" aria-label=\"dns round robin 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS round robin 방식</h3>\n<blockquote>\n<p>DNS 로드밸런싱 기법 중 하나로, 도메인에 등록된 여러개의 IP리스트 중에서 라운드 로빈 방식으로 사용자에게 IP를 리턴하는 방식</p>\n</blockquote>\n<p>DNS는 문자열로된 도메인 이름을 IP주소로 바꿔주는 역할을 하는데, 사용자가 많은 서비스들 같은경우 도메인 주소에 여러가지 공인 IP를 가지고 있는 경우가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$  <span class=\"token function\">nslookup</span> naver.com\nServer:        <span class=\"token number\">192.168</span>.10.1\nAddress:    <span class=\"token number\">192.168</span>.10.1<span class=\"token comment\">#53</span>\n\nNon-authoritative answer:\nName:    naver.com\nAddress: <span class=\"token number\">223.130</span>.195.95\nName:    naver.com\nAddress: <span class=\"token number\">125.209</span>.222.142\nName:    naver.com\nAddress: <span class=\"token number\">223.130</span>.195.200\nName:    naver.com\nAddress: <span class=\"token number\">125.209</span>.222.141</code></pre></div>\n<p>이 경우 별도의 로드밸런서 장비를 달지 않고 DNS라운드로빈을 사용해 DNS에서 레코드 정보를 조회하는 시점에서 부하분산이 가능하다.</p>\n<h4 id=\"문제점\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제점</h4>\n<ol>\n<li>부하 분산을 위해 서버 대수를 늘려 로드밸런싱 함으로 공인 IP가 각각 서버별로 있어야한다.</li>\n<li>\n<p>균등분배가 되지 않는 경우가 있음</p>\n<ul>\n<li>스마트폰의 접속은 캐리어 게이트웨이 라고 하는 프록시 서버를 경유하는데 프록시 서버에서는 이름 변환 결과가 일정 시간동안 캐싱되어 같은 프록시 서버를 경유하는 접속은 항상 같은 서버로 연결되어 부하분산이 안됨.</li>\n<li>PC 브라우저의 경우 DNS 질의 결과를 캐싱해 균등하게 부하분산 되지 않음.</li>\n<li>DNS 레코드의 TTL값을 짧게 설정함으로 일부 해소가 가능하지만, 캐시를 해제하는것은 아님</li>\n</ul>\n</li>\n<li>서버가 다운되도 확인 할수 없다.</li>\n<li>DNS 서버는 웹 서버의 부하나 접속 수 등의 상황에 따라 질의결과를 제어할 수 없다.</li>\n<li>가용성이 필요한 경우 AWS Route53과 같은 헬스 체크기능이 있는 서비스를 이용하자</li>\n</ol>\n<h4 id=\"보완-방법\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%99%84-%EB%B0%A9%EB%B2%95\" aria-label=\"보완 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보완 방법</h4>\n<h5 id=\"weighted-round-robin-wrr\" style=\"position:relative;\"><a href=\"#weighted-round-robin-wrr\" aria-label=\"weighted round robin wrr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Weighted round robin (WRR)</h5>\n<p>각각의 웹 서버에 가중치를 가미해서 분산 비율을 변경한다. 물론 가중치가 큰 서버일수록 빈번하게 선택되므로 처리능력이 높은 서버는 가중치를 높게 설정하는 것이 좋다.</p>\n<h5 id=\"least-connection\" style=\"position:relative;\"><a href=\"#least-connection\" aria-label=\"least connection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Least connection</h5>\n<p>접속 클라이언트 수가 가장 적은 서버를 선택한다. 로드밸런서에서 실시간으로 connection 수를 관리하거나 각 서버에서 주기적으로 알려주는 것이 필요하다.</p>\n<h4 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h4>\n<ul>\n<li><a href=\"https://byeongyeon.tistory.com/80\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">블로그 1</a></li>\n<li><a href=\"https://judo0179.tistory.com/127\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">블로그 2</a></li>\n<li><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Network#dns-round-robin-%EB%B0%A9%EC%8B%9D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">깃헙 레포</a></li>\n</ul>","fields":{"slug":"/posts/network/7","tagSlugs":["/tag/network/"]},"frontmatter":{"date":"2021-08-23T00:00:00","description":"DNS에서 스케줄링 알고리즘 중 DNS round robin 방식을 정리합니다.","tags":["network"],"title":"DNS 라운드 로빈 방식","socialImage":{"publicURL":"/static/624cc4a835e68430a8beec01cef8ac6c/photo.jpg"}}}},"pageContext":{"slug":"/posts/network/7"}},"staticQueryHashes":["251939775","401334301","825871152"]}