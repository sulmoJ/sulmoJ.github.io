{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/OS/7","result":{"data":{"markdownRemark":{"id":"e392bc24-010b-5b62-bcff-b3fe279de56f","html":"<br>\n<h2 id=\"ipc-inter-process-communication\" style=\"position:relative;\"><a href=\"#ipc-inter-process-communication\" aria-label=\"ipc inter process communication permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPC (Inter Process Communication)</h2>\n<blockquote>\n<p>프로세스간 통신을 의미</p>\n</blockquote>\n<p>4줄 요약</p>\n<ul>\n<li>프로그램하나에 프로세스가 하나 또는 그이상 할당될 수 있다.</li>\n<li>프로세스는 각각의 독립적인 메모리공간을 할당 하고있다.</li>\n<li>서로의 메모리를 접근 못하기 때문에 일반적으로 통신이 불가능하다.</li>\n<li>프로세스간 통신을 위해 운영체제에서 방법을 제공하며 운영체제별 조금 씩 다른 api가 있다.</li>\n</ul>\n<p>IPC는 파일시스템 기반의 통신 방법입니다. 일반적으로 프로세스간의 메모리는 독립적이기 때문에 서로 데이터를 공유할 수 없습니다. 서로 다른 프로세스간 데이터를 조작하게 되면 프로그램의 안전성이 떨어져 일부로 분리 시켜 놓았습니다. 이렇게 분리되어있는 프로세스간의 통신이 필요할 때 시도할수 있는 방법들을 알아봅니다.</p>\n<h2 id=\"ipc-종류\" style=\"position:relative;\"><a href=\"#ipc-%EC%A2%85%EB%A5%98\" aria-label=\"ipc 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPC 종류</h2>\n<p>프로세스간 통신을 위해 커널에서 제공하는 IPC를 이용한다.</p>\n<h3 id=\"익명-파이프이름이-없는-파이프\" style=\"position:relative;\"><a href=\"#%EC%9D%B5%EB%AA%85-%ED%8C%8C%EC%9D%B4%ED%94%84%EC%9D%B4%EB%A6%84%EC%9D%B4-%EC%97%86%EB%8A%94-%ED%8C%8C%EC%9D%B4%ED%94%84\" aria-label=\"익명 파이프이름이 없는 파이프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>익명 파이프(이름이 없는 파이프)</h3>\n<ul>\n<li>파이프로 두개의 프로세스를 연결해 사용하는 방식으로 한쪽에서 write가 가능하면 다른 한쪽은 read만 가능하다</li>\n<li>한쪽방향으로만 통신이 가능한 단방향 방식이다</li>\n<li>양쪽이 다 송수신하려면 파이프를 2개 열어야 한다</li>\n<li>이름이 없어(주소가 없다) <strong>외부 프로세스와 소통은 불가능</strong>하며 부모자식 프로세스간 통신에 사용된다\n<span style=\"color: #999\">프로세스는 부모 자식에대한 관계가 있는데 예로 쉘에서 vi를 호출해 사용하면 쉘은 부모 vi 자식 프로세스가 됩니다.</span></li>\n</ul>\n<h3 id=\"namedpipe-이름-있는-파이프\" style=\"position:relative;\"><a href=\"#namedpipe-%EC%9D%B4%EB%A6%84-%EC%9E%88%EB%8A%94-%ED%8C%8C%EC%9D%B4%ED%94%84\" aria-label=\"namedpipe 이름 있는 파이프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NamedPipe (이름 있는 파이프)</h3>\n<ul>\n<li>외부 프로세스와 통신을 위해 만들어짐(이름이 있는 이유)</li>\n<li>그래서 통신 범위가 제한이 없다</li>\n<li>읽기와 쓰기가 둘다가능 하다</li>\n<li>파이프를 2개 설치해야 전이중 통신이 가능하다</li>\n</ul>\n<h3 id=\"공유-메모리\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EC%9C%A0-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"공유 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공유 메모리</h3>\n<blockquote>\n<p>프로세스간 메모리 영역을 공유해서 사용할 수 있도록 허용해준다.</p>\n</blockquote>\n<p>파이프, 메시지 큐가 통신을 이용한 설비라면, 공유 메모리는 데이터 자체를 공유하도록 지원하는 설비입니다.</p>\n<p>파이프를 이용해 통신을 통해 데이터 전달도 가능하지만, 스레드처럼 메모리를 공유하도록 해준다면 더욱 편할 겁니다.</p>\n<p>공유 메모리 연결 방식</p>\n<ul>\n<li>프로세스가 공유 메모리 할당을 커널에 요청</li>\n<li>커널은 해당 프로세스에 메모리 공간을 할당</li>\n<li>이후 모든 프로세스는 해당 메모리 영역에 접근 가능</li>\n</ul>\n<h4 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h4>\n<ul>\n<li><a href=\"https://github.com/gyoogle/tech-interview-for-developer/blob/master/Computer%20Science/Operating%20System/IPC(Inter%20Process%20Communication).md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">레포</a></li>\n<li><a href=\"https://mangkyu.tistory.com/9\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">블로그</a></li>\n<li><a href=\"https://andrew0409.tistory.com/26\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">블로그2</a></li>\n</ul>","fields":{"slug":"/posts/OS/7","tagSlugs":["/tag/os/"]},"frontmatter":{"date":"2021-09-07T00:00:00","description":"IPC가 뭐죠? 처음들어봅니다만..","tags":["OS"],"title":"IPC(Inter Process Communication)","socialImage":{"publicURL":"/static/6522b74580d592d86ca1741a09ed47bf/state.png"}}}},"pageContext":{"slug":"/posts/OS/7"}},"staticQueryHashes":["251939775","401334301","825871152"]}