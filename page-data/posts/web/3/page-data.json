{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/web/3","result":{"data":{"markdownRemark":{"id":"dfac12e6-86d8-532c-92aa-e0686928d5d7","html":"<br/>\n<p>CSS in JS라는 주제를 처음 들어 보았습니다. 이전까지 css 파일로 따로 생성하기도 보기도 불편했었고 클래스명 중복 안되기위한 주렁주렁 등등을 해결해주는 친구로알고 React를 사용할 때 sytledComponent나 material-ui에서 제공한 makeStyles를 함께 사용했었습니다. 아무것도 모르는 학생이기에 뭐 성능이고 뭐고 생각도 없었지만..</p>\n<p>더 많은 정보와 사례들을 보여주는 <a href=\"https://blueshw.github.io/2020/09/14/why-css-in-css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이 글</a>을 읽으시는걸 더 추천합니다.</p>\n<p>요기 밑에 나오는 글은 제기준.. 요약입니다 ㅎㅎ</p>\n<h3 id=\"css-in-js가-뭔가요\" style=\"position:relative;\"><a href=\"#css-in-js%EA%B0%80-%EB%AD%94%EA%B0%80%EC%9A%94\" aria-label=\"css in js가 뭔가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS in JS가 뭔가요..?</h3>\n<p>JavaScript를 사용하여 스타일을 선언적이고, 유지보수 가능한 방식으로 설명합니다. 그래서 브라우저, 서버, node.js 빌드 시 컴파일이 가능합니다. <span style=\"color: #999\"><del>이전까진 그냥 JS에서 CSS 작성하던데..? 여튼 CSS파일로 만드는것보다 갠적으로 편함..! 이었던..</del></span></p>\n<h3 id=\"이전처럼-css-만-사용시-불편한점들\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%84%EC%B2%98%EB%9F%BC-css-%EB%A7%8C-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EB%B6%88%ED%8E%B8%ED%95%9C%EC%A0%90%EB%93%A4\" aria-label=\"이전처럼 css 만 사용시 불편한점들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이전처럼 CSS 만 사용시 불편한점들</h3>\n<ul>\n<li>Global namespace: 클래스 이름 중복문제</li>\n<li>Dependencies: 스타일 상속에 의한 중복 문제</li>\n<li>Dead Code Elimination: 기능 추가, 변경, 삭제 과정에서 불필요한 CSS를 제거하기 어려운 문제</li>\n<li>Minification: 클래스 이름의 최소화 문제</li>\n<li>Sharing Constants: JS의 상태 값(react:useState, vue: data)을 공유할 수 없는 문제</li>\n<li>Non-deterministic Resolution: CSS 로드 순서에 따라 스타일 우선 순위가 달라지는 문제</li>\n<li>Isolation: CSS와 JS가 분리된 탓에 상속에 따른 격리가 어려운 문제</li>\n</ul>\n<h3 id=\"css-in-js로-해결된-문제\" style=\"position:relative;\"><a href=\"#css-in-js%EB%A1%9C-%ED%95%B4%EA%B2%B0%EB%90%9C-%EB%AC%B8%EC%A0%9C\" aria-label=\"css in js로 해결된 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS in JS로 해결된 문제</h3>\n<ul>\n<li>Global namespace: => class명이 build time에 유니크한 해시값으로 변경되기 때문에 별도의 명명 규칙이 필요하지 않다.</li>\n<li>Dependencies: => CSS가 컴포넌트 단위로 추상화되기 때문에 CSS 파일(모듈)간에 의존성을 신경 쓰지 않아도 된다.</li>\n<li>Dead Code Elimination: => 컴포넌트와 CSS가 동일한 구조로 관리되므로 수정 및 삭제가 용이하다.</li>\n<li>Minification: => 네임스페이스 충돌을 막기위해 BEM 같은 방법론을 사용하면 class 명이 길어질 수 있지만, CSS-in-JS는 짧은 길이의 유니크한 클래스를 자동으로 생성한다.</li>\n<li>Sharing Constants: => CSS 코드를 JS에 작성하므로 컴포넌트의 상태에 따른 동적 코딩이 가능하다.</li>\n<li>Non-deterministic Resolution: => CSS가 컴포넌트 스코프에서만 적용되기 때문에 우선순위에 따른 문제가 발생하지 않는다.</li>\n<li>Isolation: => CSS가 JS와 결합해 있기 때문에 상속에 관한 문제를 신경 쓰지 않아도 된다.</li>\n</ul>\n<h3 id=\"단점이-있습니다\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90%EC%9D%B4-%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"단점이 있습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점이 있습니다.</h3>\n<ul>\n<li><strong>번들 크기 증가</strong>\nstyled-components와 같은 별도의 라이브러리를 추가로 설치해야 하고 필요하다면 관련된 라이브러리의 추가 설치가 필요하다</li>\n<li><strong>인터랙션이 늦다</strong>\nCSS-in-JS의 경우, 상태가 변경되면 우선 JS의 CSS 코드를 읽어와서 파싱하는 단계부터 시작하기 때문에 아무래도 늦어질 수 밖에 없다고 합니다.</li>\n</ul>\n<p>이전처럼 페이지단위의 퍼블리싱 작업이 아닌 컴포넌트 단위의 작업이 대부분인 요즘 편리함을 가져다 준 CSS in JS 또한 어떤 서비스인지 기능이 필요한지에 따라 특성들을 잘 생각하고 사용해야 하는것 같습니다..</p>\n<h4 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h4>\n<ul>\n<li><a href=\"https://blueshw.github.io/2020/09/14/why-css-in-css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSS in JS 단점</a></li>\n<li><a href=\"https://d0gf00t.tistory.com/22\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">blog1</a></li>\n</ul>","fields":{"slug":"/posts/web/3","tagSlugs":["/tag/web/","/tag/css/"]},"frontmatter":{"date":"2021-09-27T01:00:00","description":"CSS in JS에 대한 요약? 입니다.","tags":["web","CSS"],"title":"CSS in JS","socialImage":{"publicURL":"/static/624cc4a835e68430a8beec01cef8ac6c/photo.jpg"}}}},"pageContext":{"slug":"/posts/web/3"}},"staticQueryHashes":["251939775","401334301","825871152"]}